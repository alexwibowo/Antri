/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
apply plugin:'java'
apply plugin: 'org.junit.platform.gradle.plugin'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        /** Configure Gradle to run JUnit 5 */
        classpath "org.junit.platform:junit-platform-gradle-plugin:${junitGradlePluginVersion}"
        classpath("net.ltgt.gradle:gradle-apt-plugin:${gradleAptPluginVersion}")
    }
}


repositories {
    mavenLocal()
    mavenCentral()
}



dependencies {
    compile('net.openhft:chronicle-threads:1.16.0'){
        exclude group:'org.slf4j', module: 'slf4j-api'
        exclude group:'com.intellij', module: 'annotations'
    }
    compile group: 'org.jetbrains', name: 'annotations', version: "${jetbrainsAnnotationsVersion}"
    compile group: 'org.slf4j', name:'slf4j-api', version:"${slf4jVersion}"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterEngineVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-engine:${junitJupiterEngineVersion}"

    /*      The junit-vintage-engine dependency adds support for unit tests that use JUnit 4 or JUnit 3. */
    testCompile "org.junit.vintage:junit-vintage-engine:${junitVintageEngineVersion}"

    /* The junit-platform-launcher dependency provides a public API for configuring and launching tests. This API is typically used by IDEs and build tools.*/
    testCompile "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"

    /* The junit-platform-runner dependency allows us to run tests and test suites in a JUnit 4 environment. */
    testCompile "org.junit.platform:junit-platform-runner:${junitPlatformVersion}"

}